/* tslint:disable */
/* eslint-disable */
/**
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * This is a Amazon open banking api specification based on the Swagger 2.0 standard. It specifies all the api\'s that the third party will have to connect to in order to receive information from Amazon related to their customer\'s financial data.  _Please note the authentication & authorization api\'s are not part of this section and would be created & shared separately_  Some useful links: - [The SP-API repository](https://swagger-editor.dovydenk.people.a2z.com/) - [The source API definition for the Amazon Seller Wallet Open Banking API](https://swagger-editor.dovydenk.people.a2z.com/)
 *
 * The version of the OpenAPI document: 2024-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';

export const BASE_PATH = "https://sellingpartnerapi-na.amazon.com".replace(/\/+$/, "");

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};

/**
 *
 * @export
 * @interface RequestArgs
 */
export interface RequestArgs {
    url: string;
    options: RawAxiosRequestConfig;
}

/**
 *
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
    protected configuration: Configuration | undefined;

    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath ?? basePath;
        }
    }
};

/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
    constructor(public field: string, msg?: string) {
        super(msg);
        this.name = "RequiredError"
    }
}

interface ServerMap {
    [key: string]: {
        url: string,
        description: string,
    }[];
}

/**
 *
 * @export
 */
export const operationServerMap: ServerMap = {
}
