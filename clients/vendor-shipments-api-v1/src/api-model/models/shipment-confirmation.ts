/* tslint:disable */
/* eslint-disable */
/**
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { Carton } from './carton';
// May contain unused imports in some cases
// @ts-ignore
import { ImportDetails } from './import-details';
// May contain unused imports in some cases
// @ts-ignore
import { Item } from './item';
// May contain unused imports in some cases
// @ts-ignore
import { Pallet } from './pallet';
// May contain unused imports in some cases
// @ts-ignore
import { PartyIdentification } from './party-identification';
// May contain unused imports in some cases
// @ts-ignore
import { ShipmentMeasurements } from './shipment-measurements';
// May contain unused imports in some cases
// @ts-ignore
import { TransportationDetails } from './transportation-details';

/**
 * 
 * @export
 * @interface ShipmentConfirmation
 */
export interface ShipmentConfirmation {
    /**
     * Unique shipment ID (not used over the last 365 days).
     * @type {string}
     * @memberof ShipmentConfirmation
     */
    'shipmentIdentifier': string;
    /**
     * Indicates if this shipment confirmation is the initial confirmation, or intended to replace an already posted shipment confirmation. If replacing an existing shipment confirmation, be sure to provide the identical shipmentIdentifier and sellingParty information as in the previous confirmation.
     * @type {string}
     * @memberof ShipmentConfirmation
     */
    'shipmentConfirmationType': ShipmentConfirmationShipmentConfirmationTypeEnum;
    /**
     * The type of shipment.
     * @type {string}
     * @memberof ShipmentConfirmation
     */
    'shipmentType'?: ShipmentConfirmationShipmentTypeEnum;
    /**
     * Shipment hierarchical structure.
     * @type {string}
     * @memberof ShipmentConfirmation
     */
    'shipmentStructure'?: ShipmentConfirmationShipmentStructureEnum;
    /**
     * 
     * @type {TransportationDetails}
     * @memberof ShipmentConfirmation
     */
    'transportationDetails'?: TransportationDetails;
    /**
     * The Amazon Reference Number is a unique identifier generated by Amazon for all Collect/WePay shipments when you submit  a routing request. This field is mandatory for Collect/WePay shipments.
     * @type {string}
     * @memberof ShipmentConfirmation
     */
    'amazonReferenceNumber'?: string;
    /**
     * Date on which the shipment confirmation was submitted.
     * @type {string}
     * @memberof ShipmentConfirmation
     */
    'shipmentConfirmationDate': string;
    /**
     * The date and time of the departure of the shipment from the vendor\'s location. Vendors are requested to send ASNs within 30 minutes of departure from their warehouse/distribution center or at least 6 hours prior to the appointment time at the buyer destination warehouse, whichever is sooner. Shipped date mentioned in the shipment confirmation should not be in the future.
     * @type {string}
     * @memberof ShipmentConfirmation
     */
    'shippedDate'?: string;
    /**
     * The date and time on which the shipment is estimated to reach buyer\'s warehouse. It needs to be an estimate based on the average transit time between ship from location and the destination. The exact appointment time will be provided by the buyer and is potentially not known when creating the shipment confirmation.
     * @type {string}
     * @memberof ShipmentConfirmation
     */
    'estimatedDeliveryDate'?: string;
    /**
     * 
     * @type {PartyIdentification}
     * @memberof ShipmentConfirmation
     */
    'sellingParty': PartyIdentification;
    /**
     * 
     * @type {PartyIdentification}
     * @memberof ShipmentConfirmation
     */
    'shipFromParty': PartyIdentification;
    /**
     * 
     * @type {PartyIdentification}
     * @memberof ShipmentConfirmation
     */
    'shipToParty': PartyIdentification;
    /**
     * 
     * @type {ShipmentMeasurements}
     * @memberof ShipmentConfirmation
     */
    'shipmentMeasurements'?: ShipmentMeasurements;
    /**
     * 
     * @type {ImportDetails}
     * @memberof ShipmentConfirmation
     */
    'importDetails'?: ImportDetails;
    /**
     * A list of the items in this shipment and their associated details. If any of the item detail fields are common at a carton or a pallet level, provide them at the corresponding carton or pallet level.
     * @type {Array<Item>}
     * @memberof ShipmentConfirmation
     */
    'shippedItems': Array<Item>;
    /**
     * A list of the cartons in this shipment.
     * @type {Array<Carton>}
     * @memberof ShipmentConfirmation
     */
    'cartons'?: Array<Carton>;
    /**
     * A list of the pallets in this shipment.
     * @type {Array<Pallet>}
     * @memberof ShipmentConfirmation
     */
    'pallets'?: Array<Pallet>;
}

export const ShipmentConfirmationShipmentConfirmationTypeEnum = {
    Original: 'Original',
    Replace: 'Replace'
} as const;

export type ShipmentConfirmationShipmentConfirmationTypeEnum = typeof ShipmentConfirmationShipmentConfirmationTypeEnum[keyof typeof ShipmentConfirmationShipmentConfirmationTypeEnum];
export const ShipmentConfirmationShipmentTypeEnum = {
    TruckLoad: 'TruckLoad',
    LessThanTruckLoad: 'LessThanTruckLoad',
    SmallParcel: 'SmallParcel'
} as const;

export type ShipmentConfirmationShipmentTypeEnum = typeof ShipmentConfirmationShipmentTypeEnum[keyof typeof ShipmentConfirmationShipmentTypeEnum];
export const ShipmentConfirmationShipmentStructureEnum = {
    PalletizedAssortmentCase: 'PalletizedAssortmentCase',
    LooseAssortmentCase: 'LooseAssortmentCase',
    PalletOfItems: 'PalletOfItems',
    PalletizedStandardCase: 'PalletizedStandardCase',
    LooseStandardCase: 'LooseStandardCase',
    MasterPallet: 'MasterPallet',
    MasterCase: 'MasterCase'
} as const;

export type ShipmentConfirmationShipmentStructureEnum = typeof ShipmentConfirmationShipmentStructureEnum[keyof typeof ShipmentConfirmationShipmentStructureEnum];


