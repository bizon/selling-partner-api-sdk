/* tslint:disable */
/* eslint-disable */
/**
 * Catalog Items v2022-04-01
 * The Selling Partner API for Catalog Items provides programmatic access to information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/catalog-items-api-v2022-04-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { ItemBrowseClassification } from './item-browse-classification';
// May contain unused imports in some cases
// @ts-ignore
import type { ItemContributor } from './item-contributor';

/**
 * Summary details of an Amazon catalog item for the indicated Amazon marketplace.
 * @export
 * @interface ItemSummaryByMarketplace
 */
export interface ItemSummaryByMarketplace {
    /**
     * Amazon marketplace identifier.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'marketplaceId': string;
    /**
     * Identifies an Amazon catalog item is intended for an adult audience or is sexual in nature.
     * @type {boolean}
     * @memberof ItemSummaryByMarketplace
     */
    'adultProduct'?: boolean;
    /**
     * Identifies an Amazon catalog item is autographed by a player or celebrity.
     * @type {boolean}
     * @memberof ItemSummaryByMarketplace
     */
    'autographed'?: boolean;
    /**
     * Name of the brand associated with an Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'brand'?: string;
    /**
     * 
     * @type {ItemBrowseClassification}
     * @memberof ItemSummaryByMarketplace
     */
    'browseClassification'?: ItemBrowseClassification;
    /**
     * Name of the color associated with an Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'color'?: string;
    /**
     * Individual contributors to the creation of an item, such as the authors or actors.
     * @type {Array<ItemContributor>}
     * @memberof ItemSummaryByMarketplace
     */
    'contributors'?: Array<ItemContributor>;
    /**
     * Classification type associated with the Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'itemClassification'?: ItemSummaryByMarketplaceItemClassificationEnum;
    /**
     * Name, or title, associated with an Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'itemName'?: string;
    /**
     * Name of the manufacturer associated with an Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'manufacturer'?: string;
    /**
     * Identifies an Amazon catalog item is memorabilia valued for its connection with historical events, culture, or entertainment.
     * @type {boolean}
     * @memberof ItemSummaryByMarketplace
     */
    'memorabilia'?: boolean;
    /**
     * Model number associated with an Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'modelNumber'?: string;
    /**
     * Quantity of an Amazon catalog item in one package.
     * @type {number}
     * @memberof ItemSummaryByMarketplace
     */
    'packageQuantity'?: number;
    /**
     * Part number associated with an Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'partNumber'?: string;
    /**
     * First date on which an Amazon catalog item is shippable to customers.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'releaseDate'?: string;
    /**
     * Name of the size associated with an Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'size'?: string;
    /**
     * Name of the style associated with an Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'style'?: string;
    /**
     * Identifies an Amazon catalog item is eligible for trade-in.
     * @type {boolean}
     * @memberof ItemSummaryByMarketplace
     */
    'tradeInEligible'?: boolean;
    /**
     * Identifier of the website display group associated with an Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'websiteDisplayGroup'?: string;
    /**
     * Display name of the website display group associated with an Amazon catalog item.
     * @type {string}
     * @memberof ItemSummaryByMarketplace
     */
    'websiteDisplayGroupName'?: string;
}

export const ItemSummaryByMarketplaceItemClassificationEnum = {
    BaseProduct: 'BASE_PRODUCT',
    Other: 'OTHER',
    ProductBundle: 'PRODUCT_BUNDLE',
    VariationParent: 'VARIATION_PARENT'
} as const;

export type ItemSummaryByMarketplaceItemClassificationEnum = typeof ItemSummaryByMarketplaceItemClassificationEnum[keyof typeof ItemSummaryByMarketplaceItemClassificationEnum];


