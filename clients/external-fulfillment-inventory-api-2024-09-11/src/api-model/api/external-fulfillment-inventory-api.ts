/* tslint:disable */
/* eslint-disable */
/**
 * The Selling Partner API for External Fulfillment Inventory Management
 * You can use the Amazon External Fulfillment Inventory API to manage inventory operations in Amazon\'s External Fulfillment network, including batch inventory updates and retrievals.
 *
 * The version of the OpenAPI document: 2024-09-11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, type RequestArgs, BaseAPI, RequiredError, operationServerMap } from '../base';
// @ts-ignore
import type { BatchInventoryRequest } from '../models';
// @ts-ignore
import type { BatchInventoryResponse } from '../models';
// @ts-ignore
import type { ErrorList } from '../models';
/**
 * ExternalFulfillmentInventoryApi - axios parameter creator
 */
export const ExternalFulfillmentInventoryApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Make up to 10 inventory requests. The response includes the set of responses that correspond to requests. The response for each successful request in the set includes the  inventory count for the provided `sku` and `locationId` pair.
         * @param {BatchInventoryRequest} body A list of inventory requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        batchInventory: async (body: BatchInventoryRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('batchInventory', 'body', body)
            const localVarPath = `/externalFulfillment/inventory/2024-09-11/inventories`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ExternalFulfillmentInventoryApi - functional programming interface
 */
export const ExternalFulfillmentInventoryApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ExternalFulfillmentInventoryApiAxiosParamCreator(configuration)
    return {
        /**
         * Make up to 10 inventory requests. The response includes the set of responses that correspond to requests. The response for each successful request in the set includes the  inventory count for the provided `sku` and `locationId` pair.
         * @param {BatchInventoryRequest} body A list of inventory requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async batchInventory(body: BatchInventoryRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BatchInventoryResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.batchInventory(body, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['ExternalFulfillmentInventoryApi.batchInventory']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * ExternalFulfillmentInventoryApi - factory interface
 */
export const ExternalFulfillmentInventoryApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ExternalFulfillmentInventoryApiFp(configuration)
    return {
        /**
         * Make up to 10 inventory requests. The response includes the set of responses that correspond to requests. The response for each successful request in the set includes the  inventory count for the provided `sku` and `locationId` pair.
         * @param {ExternalFulfillmentInventoryApiBatchInventoryRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        batchInventory(requestParameters: ExternalFulfillmentInventoryApiBatchInventoryRequest, options?: RawAxiosRequestConfig): AxiosPromise<BatchInventoryResponse> {
            return localVarFp.batchInventory(requestParameters.body, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for batchInventory operation in ExternalFulfillmentInventoryApi.
 */
export interface ExternalFulfillmentInventoryApiBatchInventoryRequest {
    /**
     * A list of inventory requests.
     */
    readonly body: BatchInventoryRequest
}

/**
 * ExternalFulfillmentInventoryApi - object-oriented interface
 */
export class ExternalFulfillmentInventoryApi extends BaseAPI {
    /**
     * Make up to 10 inventory requests. The response includes the set of responses that correspond to requests. The response for each successful request in the set includes the  inventory count for the provided `sku` and `locationId` pair.
     * @param {ExternalFulfillmentInventoryApiBatchInventoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    public batchInventory(requestParameters: ExternalFulfillmentInventoryApiBatchInventoryRequest, options?: RawAxiosRequestConfig) {
        return ExternalFulfillmentInventoryApiFp(this.configuration).batchInventory(requestParameters.body, options).then((request) => request(this.axios, this.basePath));
    }
}

