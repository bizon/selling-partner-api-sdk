/* tslint:disable */
/* eslint-disable */
/**
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon\'s fulfillment network.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, type RequestArgs, BaseAPI, RequiredError, operationServerMap } from '../base';
// @ts-ignore
import type { GetBillOfLadingResponse } from '../models';
// @ts-ignore
import type { GetLabelsResponse } from '../models';
// @ts-ignore
import type { GetPrepInstructionsResponse } from '../models';
// @ts-ignore
import type { GetShipmentItemsResponse } from '../models';
// @ts-ignore
import type { GetShipmentsResponse } from '../models';
/**
 * FulfillmentInboundApi - axios parameter creator
 */
export const FulfillmentInboundApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBillOfLading: async (shipmentId: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'shipmentId' is not null or undefined
            assertParamExists('getBillOfLading', 'shipmentId', shipmentId)
            const localVarPath = `/fba/inbound/v0/shipments/{shipmentId}/billOfLading`
                .replace(`{${"shipmentId"}}`, encodeURIComponent(String(shipmentId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
         * @param {GetLabelsPageTypeEnum} pageType The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.
         * @param {GetLabelsLabelTypeEnum} labelType The type of labels requested. 
         * @param {number} [numberOfPackages] The number of packages in the shipment.
         * @param {Array<string>} [packageLabelsToPrint] A list of identifiers that specify packages for which you want package labels printed.  If you provide box content information with the [FBA Inbound Shipment Carton Information Feed](https://developer-docs.amazon.com/sp-api/docs/fulfillment-by-amazon-feed-type-values#fba-inbound-shipment-carton-information-feed), then &#x60;PackageLabelsToPrint&#x60; must match the &#x60;CartonId&#x60; values you provide through that feed. If you provide box content information with the Fulfillment Inbound API v2024-03-20, then &#x60;PackageLabelsToPrint&#x60; must match the &#x60;boxID&#x60; values from the [&#x60;listShipmentBoxes&#x60;](https://developer-docs.amazon.com/sp-api/reference/listshipmentboxes) response. If these values do not match as required, the operation returns the &#x60;IncorrectPackageIdentifier&#x60; error code.
         * @param {number} [numberOfPallets] The number of pallets in the shipment. This returns four identical labels for each pallet.
         * @param {number} [pageSize] The page size for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.
         * @param {number} [pageStartIndex] The page start index for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLabels: async (shipmentId: string, pageType: GetLabelsPageTypeEnum, labelType: GetLabelsLabelTypeEnum, numberOfPackages?: number, packageLabelsToPrint?: Array<string>, numberOfPallets?: number, pageSize?: number, pageStartIndex?: number, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'shipmentId' is not null or undefined
            assertParamExists('getLabels', 'shipmentId', shipmentId)
            // verify required parameter 'pageType' is not null or undefined
            assertParamExists('getLabels', 'pageType', pageType)
            // verify required parameter 'labelType' is not null or undefined
            assertParamExists('getLabels', 'labelType', labelType)
            const localVarPath = `/fba/inbound/v0/shipments/{shipmentId}/labels`
                .replace(`{${"shipmentId"}}`, encodeURIComponent(String(shipmentId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pageType !== undefined) {
                localVarQueryParameter['PageType'] = pageType;
            }

            if (labelType !== undefined) {
                localVarQueryParameter['LabelType'] = labelType;
            }

            if (numberOfPackages !== undefined) {
                localVarQueryParameter['NumberOfPackages'] = numberOfPackages;
            }

            if (packageLabelsToPrint) {
                localVarQueryParameter['PackageLabelsToPrint'] = packageLabelsToPrint.join(COLLECTION_FORMATS.csv);
            }

            if (numberOfPallets !== undefined) {
                localVarQueryParameter['NumberOfPallets'] = numberOfPallets;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['PageSize'] = pageSize;
            }

            if (pageStartIndex !== undefined) {
                localVarQueryParameter['PageStartIndex'] = pageStartIndex;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon\'s fulfillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipToCountryCode The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.
         * @param {Array<string>} [sellerSKUList] A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon\&#39;s fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.  Note: Include seller SKUs that you have used to list items on Amazon\&#39;s retail website. If you include a seller SKU that you have never used to list an item on Amazon\&#39;s retail website, the seller SKU is returned in the InvalidSKUList property in the response.
         * @param {Array<string>} [aSINList] A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.  Note: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPrepInstructions: async (shipToCountryCode: string, sellerSKUList?: Array<string>, aSINList?: Array<string>, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'shipToCountryCode' is not null or undefined
            assertParamExists('getPrepInstructions', 'shipToCountryCode', shipToCountryCode)
            const localVarPath = `/fba/inbound/v0/prepInstructions`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (shipToCountryCode !== undefined) {
                localVarQueryParameter['ShipToCountryCode'] = shipToCountryCode;
            }

            if (sellerSKUList) {
                localVarQueryParameter['SellerSKUList'] = sellerSKUList.join(COLLECTION_FORMATS.csv);
            }

            if (aSINList) {
                localVarQueryParameter['ASINList'] = aSINList.join(COLLECTION_FORMATS.csv);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetShipmentItemsQueryTypeEnum} queryType Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.
         * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
         * @param {string} [lastUpdatedAfter] A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
         * @param {string} [lastUpdatedBefore] A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
         * @param {string} [nextToken] A string token returned in the response to your previous request.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentItems: async (queryType: GetShipmentItemsQueryTypeEnum, marketplaceId: string, lastUpdatedAfter?: string, lastUpdatedBefore?: string, nextToken?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'queryType' is not null or undefined
            assertParamExists('getShipmentItems', 'queryType', queryType)
            // verify required parameter 'marketplaceId' is not null or undefined
            assertParamExists('getShipmentItems', 'marketplaceId', marketplaceId)
            const localVarPath = `/fba/inbound/v0/shipmentItems`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (lastUpdatedAfter !== undefined) {
                localVarQueryParameter['LastUpdatedAfter'] = (lastUpdatedAfter as any instanceof Date) ?
                    (lastUpdatedAfter as any).toISOString() :
                    lastUpdatedAfter;
            }

            if (lastUpdatedBefore !== undefined) {
                localVarQueryParameter['LastUpdatedBefore'] = (lastUpdatedBefore as any instanceof Date) ?
                    (lastUpdatedBefore as any).toISOString() :
                    lastUpdatedBefore;
            }

            if (queryType !== undefined) {
                localVarQueryParameter['QueryType'] = queryType;
            }

            if (nextToken !== undefined) {
                localVarQueryParameter['NextToken'] = nextToken;
            }

            if (marketplaceId !== undefined) {
                localVarQueryParameter['MarketplaceId'] = marketplaceId;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns a list of items in a specified inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId A shipment identifier used for selecting items in a specific inbound shipment.
         * @param {string} [marketplaceId] Deprecated. Do not use.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentItemsByShipmentId: async (shipmentId: string, marketplaceId?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'shipmentId' is not null or undefined
            assertParamExists('getShipmentItemsByShipmentId', 'shipmentId', shipmentId)
            const localVarPath = `/fba/inbound/v0/shipments/{shipmentId}/items`
                .replace(`{${"shipmentId"}}`, encodeURIComponent(String(shipmentId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (marketplaceId !== undefined) {
                localVarQueryParameter['MarketplaceId'] = marketplaceId;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns a list of inbound shipments based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetShipmentsQueryTypeEnum} queryType Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.
         * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
         * @param {Array<GetShipmentsShipmentStatusListEnum>} [shipmentStatusList] A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.
         * @param {Array<string>} [shipmentIdList] A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.
         * @param {string} [lastUpdatedAfter] A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
         * @param {string} [lastUpdatedBefore] A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
         * @param {string} [nextToken] A string token returned in the response to your previous request.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipments: async (queryType: GetShipmentsQueryTypeEnum, marketplaceId: string, shipmentStatusList?: Array<GetShipmentsShipmentStatusListEnum>, shipmentIdList?: Array<string>, lastUpdatedAfter?: string, lastUpdatedBefore?: string, nextToken?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'queryType' is not null or undefined
            assertParamExists('getShipments', 'queryType', queryType)
            // verify required parameter 'marketplaceId' is not null or undefined
            assertParamExists('getShipments', 'marketplaceId', marketplaceId)
            const localVarPath = `/fba/inbound/v0/shipments`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (shipmentStatusList) {
                localVarQueryParameter['ShipmentStatusList'] = shipmentStatusList.join(COLLECTION_FORMATS.csv);
            }

            if (shipmentIdList) {
                localVarQueryParameter['ShipmentIdList'] = shipmentIdList.join(COLLECTION_FORMATS.csv);
            }

            if (lastUpdatedAfter !== undefined) {
                localVarQueryParameter['LastUpdatedAfter'] = (lastUpdatedAfter as any instanceof Date) ?
                    (lastUpdatedAfter as any).toISOString() :
                    lastUpdatedAfter;
            }

            if (lastUpdatedBefore !== undefined) {
                localVarQueryParameter['LastUpdatedBefore'] = (lastUpdatedBefore as any instanceof Date) ?
                    (lastUpdatedBefore as any).toISOString() :
                    lastUpdatedBefore;
            }

            if (queryType !== undefined) {
                localVarQueryParameter['QueryType'] = queryType;
            }

            if (nextToken !== undefined) {
                localVarQueryParameter['NextToken'] = nextToken;
            }

            if (marketplaceId !== undefined) {
                localVarQueryParameter['MarketplaceId'] = marketplaceId;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FulfillmentInboundApi - functional programming interface
 */
export const FulfillmentInboundApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = FulfillmentInboundApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getBillOfLading(shipmentId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBillOfLadingResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getBillOfLading(shipmentId, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['FulfillmentInboundApi.getBillOfLading']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId A shipment identifier originally returned by the createInboundShipmentPlan operation.
         * @param {GetLabelsPageTypeEnum} pageType The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.
         * @param {GetLabelsLabelTypeEnum} labelType The type of labels requested. 
         * @param {number} [numberOfPackages] The number of packages in the shipment.
         * @param {Array<string>} [packageLabelsToPrint] A list of identifiers that specify packages for which you want package labels printed.  If you provide box content information with the [FBA Inbound Shipment Carton Information Feed](https://developer-docs.amazon.com/sp-api/docs/fulfillment-by-amazon-feed-type-values#fba-inbound-shipment-carton-information-feed), then &#x60;PackageLabelsToPrint&#x60; must match the &#x60;CartonId&#x60; values you provide through that feed. If you provide box content information with the Fulfillment Inbound API v2024-03-20, then &#x60;PackageLabelsToPrint&#x60; must match the &#x60;boxID&#x60; values from the [&#x60;listShipmentBoxes&#x60;](https://developer-docs.amazon.com/sp-api/reference/listshipmentboxes) response. If these values do not match as required, the operation returns the &#x60;IncorrectPackageIdentifier&#x60; error code.
         * @param {number} [numberOfPallets] The number of pallets in the shipment. This returns four identical labels for each pallet.
         * @param {number} [pageSize] The page size for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.
         * @param {number} [pageStartIndex] The page start index for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getLabels(shipmentId: string, pageType: GetLabelsPageTypeEnum, labelType: GetLabelsLabelTypeEnum, numberOfPackages?: number, packageLabelsToPrint?: Array<string>, numberOfPallets?: number, pageSize?: number, pageStartIndex?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLabelsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getLabels(shipmentId, pageType, labelType, numberOfPackages, packageLabelsToPrint, numberOfPallets, pageSize, pageStartIndex, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['FulfillmentInboundApi.getLabels']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon\'s fulfillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipToCountryCode The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.
         * @param {Array<string>} [sellerSKUList] A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon\&#39;s fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.  Note: Include seller SKUs that you have used to list items on Amazon\&#39;s retail website. If you include a seller SKU that you have never used to list an item on Amazon\&#39;s retail website, the seller SKU is returned in the InvalidSKUList property in the response.
         * @param {Array<string>} [aSINList] A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.  Note: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getPrepInstructions(shipToCountryCode: string, sellerSKUList?: Array<string>, aSINList?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPrepInstructionsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getPrepInstructions(shipToCountryCode, sellerSKUList, aSINList, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['FulfillmentInboundApi.getPrepInstructions']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetShipmentItemsQueryTypeEnum} queryType Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.
         * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
         * @param {string} [lastUpdatedAfter] A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
         * @param {string} [lastUpdatedBefore] A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
         * @param {string} [nextToken] A string token returned in the response to your previous request.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getShipmentItems(queryType: GetShipmentItemsQueryTypeEnum, marketplaceId: string, lastUpdatedAfter?: string, lastUpdatedBefore?: string, nextToken?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentItemsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getShipmentItems(queryType, marketplaceId, lastUpdatedAfter, lastUpdatedBefore, nextToken, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['FulfillmentInboundApi.getShipmentItems']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Returns a list of items in a specified inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId A shipment identifier used for selecting items in a specific inbound shipment.
         * @param {string} [marketplaceId] Deprecated. Do not use.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getShipmentItemsByShipmentId(shipmentId: string, marketplaceId?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentItemsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getShipmentItemsByShipmentId(shipmentId, marketplaceId, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['FulfillmentInboundApi.getShipmentItemsByShipmentId']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Returns a list of inbound shipments based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetShipmentsQueryTypeEnum} queryType Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.
         * @param {string} marketplaceId A marketplace identifier. Specifies the marketplace where the product would be stored.
         * @param {Array<GetShipmentsShipmentStatusListEnum>} [shipmentStatusList] A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.
         * @param {Array<string>} [shipmentIdList] A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.
         * @param {string} [lastUpdatedAfter] A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
         * @param {string} [lastUpdatedBefore] A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
         * @param {string} [nextToken] A string token returned in the response to your previous request.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getShipments(queryType: GetShipmentsQueryTypeEnum, marketplaceId: string, shipmentStatusList?: Array<GetShipmentsShipmentStatusListEnum>, shipmentIdList?: Array<string>, lastUpdatedAfter?: string, lastUpdatedBefore?: string, nextToken?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getShipments(queryType, marketplaceId, shipmentStatusList, shipmentIdList, lastUpdatedAfter, lastUpdatedBefore, nextToken, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['FulfillmentInboundApi.getShipments']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * FulfillmentInboundApi - factory interface
 */
export const FulfillmentInboundApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = FulfillmentInboundApiFp(configuration)
    return {
        /**
         * Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {FulfillmentInboundApiGetBillOfLadingRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBillOfLading(requestParameters: FulfillmentInboundApiGetBillOfLadingRequest, options?: RawAxiosRequestConfig): AxiosPromise<GetBillOfLadingResponse> {
            return localVarFp.getBillOfLading(requestParameters.shipmentId, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {FulfillmentInboundApiGetLabelsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLabels(requestParameters: FulfillmentInboundApiGetLabelsRequest, options?: RawAxiosRequestConfig): AxiosPromise<GetLabelsResponse> {
            return localVarFp.getLabels(requestParameters.shipmentId, requestParameters.pageType, requestParameters.labelType, requestParameters.numberOfPackages, requestParameters.packageLabelsToPrint, requestParameters.numberOfPallets, requestParameters.pageSize, requestParameters.pageStartIndex, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon\'s fulfillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {FulfillmentInboundApiGetPrepInstructionsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPrepInstructions(requestParameters: FulfillmentInboundApiGetPrepInstructionsRequest, options?: RawAxiosRequestConfig): AxiosPromise<GetPrepInstructionsResponse> {
            return localVarFp.getPrepInstructions(requestParameters.shipToCountryCode, requestParameters.sellerSKUList, requestParameters.aSINList, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {FulfillmentInboundApiGetShipmentItemsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentItems(requestParameters: FulfillmentInboundApiGetShipmentItemsRequest, options?: RawAxiosRequestConfig): AxiosPromise<GetShipmentItemsResponse> {
            return localVarFp.getShipmentItems(requestParameters.queryType, requestParameters.marketplaceId, requestParameters.lastUpdatedAfter, requestParameters.lastUpdatedBefore, requestParameters.nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns a list of items in a specified inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {FulfillmentInboundApiGetShipmentItemsByShipmentIdRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentItemsByShipmentId(requestParameters: FulfillmentInboundApiGetShipmentItemsByShipmentIdRequest, options?: RawAxiosRequestConfig): AxiosPromise<GetShipmentItemsResponse> {
            return localVarFp.getShipmentItemsByShipmentId(requestParameters.shipmentId, requestParameters.marketplaceId, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns a list of inbound shipments based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {FulfillmentInboundApiGetShipmentsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipments(requestParameters: FulfillmentInboundApiGetShipmentsRequest, options?: RawAxiosRequestConfig): AxiosPromise<GetShipmentsResponse> {
            return localVarFp.getShipments(requestParameters.queryType, requestParameters.marketplaceId, requestParameters.shipmentStatusList, requestParameters.shipmentIdList, requestParameters.lastUpdatedAfter, requestParameters.lastUpdatedBefore, requestParameters.nextToken, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getBillOfLading operation in FulfillmentInboundApi.
 */
export interface FulfillmentInboundApiGetBillOfLadingRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     */
    readonly shipmentId: string
}

/**
 * Request parameters for getLabels operation in FulfillmentInboundApi.
 */
export interface FulfillmentInboundApiGetLabelsRequest {
    /**
     * A shipment identifier originally returned by the createInboundShipmentPlan operation.
     */
    readonly shipmentId: string

    /**
     * The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.
     */
    readonly pageType: GetLabelsPageTypeEnum

    /**
     * The type of labels requested. 
     */
    readonly labelType: GetLabelsLabelTypeEnum

    /**
     * The number of packages in the shipment.
     */
    readonly numberOfPackages?: number

    /**
     * A list of identifiers that specify packages for which you want package labels printed.  If you provide box content information with the [FBA Inbound Shipment Carton Information Feed](https://developer-docs.amazon.com/sp-api/docs/fulfillment-by-amazon-feed-type-values#fba-inbound-shipment-carton-information-feed), then &#x60;PackageLabelsToPrint&#x60; must match the &#x60;CartonId&#x60; values you provide through that feed. If you provide box content information with the Fulfillment Inbound API v2024-03-20, then &#x60;PackageLabelsToPrint&#x60; must match the &#x60;boxID&#x60; values from the [&#x60;listShipmentBoxes&#x60;](https://developer-docs.amazon.com/sp-api/reference/listshipmentboxes) response. If these values do not match as required, the operation returns the &#x60;IncorrectPackageIdentifier&#x60; error code.
     */
    readonly packageLabelsToPrint?: Array<string>

    /**
     * The number of pallets in the shipment. This returns four identical labels for each pallet.
     */
    readonly numberOfPallets?: number

    /**
     * The page size for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.
     */
    readonly pageSize?: number

    /**
     * The page start index for paginating through the total packages\&#39; labels. This is a required parameter for Non-Partnered LTL Shipments.
     */
    readonly pageStartIndex?: number
}

/**
 * Request parameters for getPrepInstructions operation in FulfillmentInboundApi.
 */
export interface FulfillmentInboundApiGetPrepInstructionsRequest {
    /**
     * The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.
     */
    readonly shipToCountryCode: string

    /**
     * A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon\&#39;s fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.  Note: Include seller SKUs that you have used to list items on Amazon\&#39;s retail website. If you include a seller SKU that you have never used to list an item on Amazon\&#39;s retail website, the seller SKU is returned in the InvalidSKUList property in the response.
     */
    readonly sellerSKUList?: Array<string>

    /**
     * A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.  Note: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.
     */
    readonly aSINList?: Array<string>
}

/**
 * Request parameters for getShipmentItems operation in FulfillmentInboundApi.
 */
export interface FulfillmentInboundApiGetShipmentItemsRequest {
    /**
     * Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.
     */
    readonly queryType: GetShipmentItemsQueryTypeEnum

    /**
     * A marketplace identifier. Specifies the marketplace where the product would be stored.
     */
    readonly marketplaceId: string

    /**
     * A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     */
    readonly lastUpdatedAfter?: string

    /**
     * A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     */
    readonly lastUpdatedBefore?: string

    /**
     * A string token returned in the response to your previous request.
     */
    readonly nextToken?: string
}

/**
 * Request parameters for getShipmentItemsByShipmentId operation in FulfillmentInboundApi.
 */
export interface FulfillmentInboundApiGetShipmentItemsByShipmentIdRequest {
    /**
     * A shipment identifier used for selecting items in a specific inbound shipment.
     */
    readonly shipmentId: string

    /**
     * Deprecated. Do not use.
     */
    readonly marketplaceId?: string
}

/**
 * Request parameters for getShipments operation in FulfillmentInboundApi.
 */
export interface FulfillmentInboundApiGetShipmentsRequest {
    /**
     * Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.
     */
    readonly queryType: GetShipmentsQueryTypeEnum

    /**
     * A marketplace identifier. Specifies the marketplace where the product would be stored.
     */
    readonly marketplaceId: string

    /**
     * A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.
     */
    readonly shipmentStatusList?: Array<GetShipmentsShipmentStatusListEnum>

    /**
     * A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.
     */
    readonly shipmentIdList?: Array<string>

    /**
     * A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     */
    readonly lastUpdatedAfter?: string

    /**
     * A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
     */
    readonly lastUpdatedBefore?: string

    /**
     * A string token returned in the response to your previous request.
     */
    readonly nextToken?: string
}

/**
 * FulfillmentInboundApi - object-oriented interface
 */
export class FulfillmentInboundApi extends BaseAPI {
    /**
     * Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FulfillmentInboundApiGetBillOfLadingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    public getBillOfLading(requestParameters: FulfillmentInboundApiGetBillOfLadingRequest, options?: RawAxiosRequestConfig) {
        return FulfillmentInboundApiFp(this.configuration).getBillOfLading(requestParameters.shipmentId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FulfillmentInboundApiGetLabelsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    public getLabels(requestParameters: FulfillmentInboundApiGetLabelsRequest, options?: RawAxiosRequestConfig) {
        return FulfillmentInboundApiFp(this.configuration).getLabels(requestParameters.shipmentId, requestParameters.pageType, requestParameters.labelType, requestParameters.numberOfPackages, requestParameters.packageLabelsToPrint, requestParameters.numberOfPallets, requestParameters.pageSize, requestParameters.pageStartIndex, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon\'s fulfillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FulfillmentInboundApiGetPrepInstructionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    public getPrepInstructions(requestParameters: FulfillmentInboundApiGetPrepInstructionsRequest, options?: RawAxiosRequestConfig) {
        return FulfillmentInboundApiFp(this.configuration).getPrepInstructions(requestParameters.shipToCountryCode, requestParameters.sellerSKUList, requestParameters.aSINList, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FulfillmentInboundApiGetShipmentItemsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    public getShipmentItems(requestParameters: FulfillmentInboundApiGetShipmentItemsRequest, options?: RawAxiosRequestConfig) {
        return FulfillmentInboundApiFp(this.configuration).getShipmentItems(requestParameters.queryType, requestParameters.marketplaceId, requestParameters.lastUpdatedAfter, requestParameters.lastUpdatedBefore, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns a list of items in a specified inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FulfillmentInboundApiGetShipmentItemsByShipmentIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    public getShipmentItemsByShipmentId(requestParameters: FulfillmentInboundApiGetShipmentItemsByShipmentIdRequest, options?: RawAxiosRequestConfig) {
        return FulfillmentInboundApiFp(this.configuration).getShipmentItemsByShipmentId(requestParameters.shipmentId, requestParameters.marketplaceId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns a list of inbound shipments based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {FulfillmentInboundApiGetShipmentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    public getShipments(requestParameters: FulfillmentInboundApiGetShipmentsRequest, options?: RawAxiosRequestConfig) {
        return FulfillmentInboundApiFp(this.configuration).getShipments(requestParameters.queryType, requestParameters.marketplaceId, requestParameters.shipmentStatusList, requestParameters.shipmentIdList, requestParameters.lastUpdatedAfter, requestParameters.lastUpdatedBefore, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }
}

export const GetLabelsPageTypeEnum = {
    PackageLabelLetter2: 'PackageLabel_Letter_2',
    PackageLabelLetter4: 'PackageLabel_Letter_4',
    PackageLabelLetter6: 'PackageLabel_Letter_6',
    PackageLabelLetter6CarrierLeft: 'PackageLabel_Letter_6_CarrierLeft',
    PackageLabelA42: 'PackageLabel_A4_2',
    PackageLabelA44: 'PackageLabel_A4_4',
    PackageLabelPlainPaper: 'PackageLabel_Plain_Paper',
    PackageLabelPlainPaperCarrierBottom: 'PackageLabel_Plain_Paper_CarrierBottom',
    PackageLabelThermal: 'PackageLabel_Thermal',
    PackageLabelThermalUnified: 'PackageLabel_Thermal_Unified',
    PackageLabelThermalNonPcp: 'PackageLabel_Thermal_NonPCP',
    PackageLabelThermalNoCarrierRotation: 'PackageLabel_Thermal_No_Carrier_Rotation'
} as const;
export type GetLabelsPageTypeEnum = typeof GetLabelsPageTypeEnum[keyof typeof GetLabelsPageTypeEnum];
export const GetLabelsLabelTypeEnum = {
    Barcode2D: 'BARCODE_2D',
    Unique: 'UNIQUE',
    Pallet: 'PALLET'
} as const;
export type GetLabelsLabelTypeEnum = typeof GetLabelsLabelTypeEnum[keyof typeof GetLabelsLabelTypeEnum];
export const GetShipmentItemsQueryTypeEnum = {
    DateRange: 'DATE_RANGE',
    NextToken: 'NEXT_TOKEN'
} as const;
export type GetShipmentItemsQueryTypeEnum = typeof GetShipmentItemsQueryTypeEnum[keyof typeof GetShipmentItemsQueryTypeEnum];
export const GetShipmentsQueryTypeEnum = {
    Shipment: 'SHIPMENT',
    DateRange: 'DATE_RANGE',
    NextToken: 'NEXT_TOKEN'
} as const;
export type GetShipmentsQueryTypeEnum = typeof GetShipmentsQueryTypeEnum[keyof typeof GetShipmentsQueryTypeEnum];
export const GetShipmentsShipmentStatusListEnum = {
    Working: 'WORKING',
    ReadyToShip: 'READY_TO_SHIP',
    Shipped: 'SHIPPED',
    Receiving: 'RECEIVING',
    Cancelled: 'CANCELLED',
    Deleted: 'DELETED',
    Closed: 'CLOSED',
    Error: 'ERROR',
    InTransit: 'IN_TRANSIT',
    Delivered: 'DELIVERED',
    CheckedIn: 'CHECKED_IN'
} as const;
export type GetShipmentsShipmentStatusListEnum = typeof GetShipmentsShipmentStatusListEnum[keyof typeof GetShipmentsShipmentStatusListEnum];
