/* tslint:disable */
/* eslint-disable */
/**
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, type RequestArgs, BaseAPI, RequiredError, operationServerMap } from '../base';
// @ts-ignore
import type { GetShipmentDetailsResponse } from '../models';
// @ts-ignore
import type { GetShipmentLabels } from '../models';
// @ts-ignore
import type { SubmitShipmentConfirmationsRequest } from '../models';
// @ts-ignore
import type { SubmitShipmentConfirmationsResponse } from '../models';
// @ts-ignore
import type { SubmitShipments } from '../models';
/**
 * VendorShipmentsApi - axios parameter creator
 * @export
 */
export const VendorShipmentsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @summary GetShipmentDetails
         * @param {number} [limit] The limit to the number of records returned. Default value is 50 records.
         * @param {GetShipmentDetailsSortOrderEnum} [sortOrder] Sort in ascending or descending order by purchase order creation date.
         * @param {string} [nextToken] Used for pagination when there are more shipments than the specified result size limit.
         * @param {string} [createdAfter] Get Shipment Details that became available after this timestamp will be included in the result. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [createdBefore] Get Shipment Details that became available before this timestamp will be included in the result. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shipmentConfirmedBefore] Get Shipment Details by passing Shipment confirmed create Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shipmentConfirmedAfter] Get Shipment Details by passing Shipment confirmed create Date After. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [packageLabelCreatedBefore] Get Shipment Details by passing Package label create Date by buyer. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [packageLabelCreatedAfter] Get Shipment Details by passing Package label create Date After by buyer. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shippedBefore] Get Shipment Details by passing Shipped Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shippedAfter] Get Shipment Details by passing Shipped Date After. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [estimatedDeliveryBefore] Get Shipment Details by passing Estimated Delivery Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [estimatedDeliveryAfter] Get Shipment Details by passing Estimated Delivery Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shipmentDeliveryBefore] Get Shipment Details by passing Shipment Delivery Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shipmentDeliveryAfter] Get Shipment Details by passing Shipment Delivery Date After. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [requestedPickUpBefore] Get Shipment Details by passing Before Requested pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [requestedPickUpAfter] Get Shipment Details by passing After Requested pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [scheduledPickUpBefore] Get Shipment Details by passing Before scheduled pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [scheduledPickUpAfter] Get Shipment Details by passing After Scheduled pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [currentShipmentStatus] Get Shipment Details by passing Current shipment status.
         * @param {string} [vendorShipmentIdentifier] Get Shipment Details by passing Vendor Shipment ID
         * @param {string} [buyerReferenceNumber] Get Shipment Details by passing buyer Reference ID
         * @param {string} [buyerWarehouseCode] Get Shipping Details based on buyer warehouse code. This value should be same as \&#39;shipToParty.partyId\&#39; in the Shipment.
         * @param {string} [sellerWarehouseCode] Get Shipping Details based on vendor warehouse code. This value should be same as \&#39;sellingParty.partyId\&#39; in the Shipment.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentDetails: async (limit?: number, sortOrder?: GetShipmentDetailsSortOrderEnum, nextToken?: string, createdAfter?: string, createdBefore?: string, shipmentConfirmedBefore?: string, shipmentConfirmedAfter?: string, packageLabelCreatedBefore?: string, packageLabelCreatedAfter?: string, shippedBefore?: string, shippedAfter?: string, estimatedDeliveryBefore?: string, estimatedDeliveryAfter?: string, shipmentDeliveryBefore?: string, shipmentDeliveryAfter?: string, requestedPickUpBefore?: string, requestedPickUpAfter?: string, scheduledPickUpBefore?: string, scheduledPickUpAfter?: string, currentShipmentStatus?: string, vendorShipmentIdentifier?: string, buyerReferenceNumber?: string, buyerWarehouseCode?: string, sellerWarehouseCode?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/vendor/shipping/v1/shipments`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (sortOrder !== undefined) {
                localVarQueryParameter['sortOrder'] = sortOrder;
            }

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (createdAfter !== undefined) {
                localVarQueryParameter['createdAfter'] = (createdAfter as any instanceof Date) ?
                    (createdAfter as any).toISOString() :
                    createdAfter;
            }

            if (createdBefore !== undefined) {
                localVarQueryParameter['createdBefore'] = (createdBefore as any instanceof Date) ?
                    (createdBefore as any).toISOString() :
                    createdBefore;
            }

            if (shipmentConfirmedBefore !== undefined) {
                localVarQueryParameter['shipmentConfirmedBefore'] = (shipmentConfirmedBefore as any instanceof Date) ?
                    (shipmentConfirmedBefore as any).toISOString() :
                    shipmentConfirmedBefore;
            }

            if (shipmentConfirmedAfter !== undefined) {
                localVarQueryParameter['shipmentConfirmedAfter'] = (shipmentConfirmedAfter as any instanceof Date) ?
                    (shipmentConfirmedAfter as any).toISOString() :
                    shipmentConfirmedAfter;
            }

            if (packageLabelCreatedBefore !== undefined) {
                localVarQueryParameter['packageLabelCreatedBefore'] = (packageLabelCreatedBefore as any instanceof Date) ?
                    (packageLabelCreatedBefore as any).toISOString() :
                    packageLabelCreatedBefore;
            }

            if (packageLabelCreatedAfter !== undefined) {
                localVarQueryParameter['packageLabelCreatedAfter'] = (packageLabelCreatedAfter as any instanceof Date) ?
                    (packageLabelCreatedAfter as any).toISOString() :
                    packageLabelCreatedAfter;
            }

            if (shippedBefore !== undefined) {
                localVarQueryParameter['shippedBefore'] = (shippedBefore as any instanceof Date) ?
                    (shippedBefore as any).toISOString() :
                    shippedBefore;
            }

            if (shippedAfter !== undefined) {
                localVarQueryParameter['shippedAfter'] = (shippedAfter as any instanceof Date) ?
                    (shippedAfter as any).toISOString() :
                    shippedAfter;
            }

            if (estimatedDeliveryBefore !== undefined) {
                localVarQueryParameter['estimatedDeliveryBefore'] = (estimatedDeliveryBefore as any instanceof Date) ?
                    (estimatedDeliveryBefore as any).toISOString() :
                    estimatedDeliveryBefore;
            }

            if (estimatedDeliveryAfter !== undefined) {
                localVarQueryParameter['estimatedDeliveryAfter'] = (estimatedDeliveryAfter as any instanceof Date) ?
                    (estimatedDeliveryAfter as any).toISOString() :
                    estimatedDeliveryAfter;
            }

            if (shipmentDeliveryBefore !== undefined) {
                localVarQueryParameter['shipmentDeliveryBefore'] = (shipmentDeliveryBefore as any instanceof Date) ?
                    (shipmentDeliveryBefore as any).toISOString() :
                    shipmentDeliveryBefore;
            }

            if (shipmentDeliveryAfter !== undefined) {
                localVarQueryParameter['shipmentDeliveryAfter'] = (shipmentDeliveryAfter as any instanceof Date) ?
                    (shipmentDeliveryAfter as any).toISOString() :
                    shipmentDeliveryAfter;
            }

            if (requestedPickUpBefore !== undefined) {
                localVarQueryParameter['requestedPickUpBefore'] = (requestedPickUpBefore as any instanceof Date) ?
                    (requestedPickUpBefore as any).toISOString() :
                    requestedPickUpBefore;
            }

            if (requestedPickUpAfter !== undefined) {
                localVarQueryParameter['requestedPickUpAfter'] = (requestedPickUpAfter as any instanceof Date) ?
                    (requestedPickUpAfter as any).toISOString() :
                    requestedPickUpAfter;
            }

            if (scheduledPickUpBefore !== undefined) {
                localVarQueryParameter['scheduledPickUpBefore'] = (scheduledPickUpBefore as any instanceof Date) ?
                    (scheduledPickUpBefore as any).toISOString() :
                    scheduledPickUpBefore;
            }

            if (scheduledPickUpAfter !== undefined) {
                localVarQueryParameter['scheduledPickUpAfter'] = (scheduledPickUpAfter as any instanceof Date) ?
                    (scheduledPickUpAfter as any).toISOString() :
                    scheduledPickUpAfter;
            }

            if (currentShipmentStatus !== undefined) {
                localVarQueryParameter['currentShipmentStatus'] = currentShipmentStatus;
            }

            if (vendorShipmentIdentifier !== undefined) {
                localVarQueryParameter['vendorShipmentIdentifier'] = vendorShipmentIdentifier;
            }

            if (buyerReferenceNumber !== undefined) {
                localVarQueryParameter['buyerReferenceNumber'] = buyerReferenceNumber;
            }

            if (buyerWarehouseCode !== undefined) {
                localVarQueryParameter['buyerWarehouseCode'] = buyerWarehouseCode;
            }

            if (sellerWarehouseCode !== undefined) {
                localVarQueryParameter['sellerWarehouseCode'] = sellerWarehouseCode;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns small parcel shipment labels based on the filters that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {number} [limit] The limit to the number of records returned. Default value is 50 records.
         * @param {GetShipmentLabelsSortOrderEnum} [sortOrder] Sort the list by shipment label creation date in ascending or descending order.
         * @param {string} [nextToken] A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when the number of results exceeds the specified &#x60;pageSize&#x60; value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages.
         * @param {string} [labelCreatedAfter] Shipment labels created after this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
         * @param {string} [labelCreatedBefore] Shipment labels created before this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
         * @param {string} [buyerReferenceNumber] Get Shipment labels by passing buyer reference number.
         * @param {string} [vendorShipmentIdentifier] Get Shipment labels by passing vendor shipment identifier.
         * @param {string} [sellerWarehouseCode] Get Shipping labels based on vendor warehouse code. This value must be same as the &#x60;sellingParty.partyId&#x60; in the shipment.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentLabels: async (limit?: number, sortOrder?: GetShipmentLabelsSortOrderEnum, nextToken?: string, labelCreatedAfter?: string, labelCreatedBefore?: string, buyerReferenceNumber?: string, vendorShipmentIdentifier?: string, sellerWarehouseCode?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/vendor/shipping/v1/transportLabels`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (sortOrder !== undefined) {
                localVarQueryParameter['sortOrder'] = sortOrder;
            }

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (labelCreatedAfter !== undefined) {
                localVarQueryParameter['labelCreatedAfter'] = (labelCreatedAfter as any instanceof Date) ?
                    (labelCreatedAfter as any).toISOString() :
                    labelCreatedAfter;
            }

            if (labelCreatedBefore !== undefined) {
                localVarQueryParameter['labelCreatedBefore'] = (labelCreatedBefore as any instanceof Date) ?
                    (labelCreatedBefore as any).toISOString() :
                    labelCreatedBefore;
            }

            if (buyerReferenceNumber !== undefined) {
                localVarQueryParameter['buyerReferenceNumber'] = buyerReferenceNumber;
            }

            if (vendorShipmentIdentifier !== undefined) {
                localVarQueryParameter['vendorShipmentIdentifier'] = vendorShipmentIdentifier;
            }

            if (sellerWarehouseCode !== undefined) {
                localVarQueryParameter['sellerWarehouseCode'] = sellerWarehouseCode;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Submits one or more shipment confirmations for vendor orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @summary SubmitShipmentConfirmations
         * @param {SubmitShipmentConfirmationsRequest} body A request to submit shipment confirmation.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitShipmentConfirmations: async (body: SubmitShipmentConfirmationsRequest, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('submitShipmentConfirmations', 'body', body)
            const localVarPath = `/vendor/shipping/v1/shipmentConfirmations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Submits one or more shipment request for vendor Orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @summary SubmitShipments
         * @param {SubmitShipments} body A request to submit shipment request.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitShipments: async (body: SubmitShipments, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('submitShipments', 'body', body)
            const localVarPath = `/vendor/shipping/v1/shipments`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * VendorShipmentsApi - functional programming interface
 * @export
 */
export const VendorShipmentsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = VendorShipmentsApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @summary GetShipmentDetails
         * @param {number} [limit] The limit to the number of records returned. Default value is 50 records.
         * @param {GetShipmentDetailsSortOrderEnum} [sortOrder] Sort in ascending or descending order by purchase order creation date.
         * @param {string} [nextToken] Used for pagination when there are more shipments than the specified result size limit.
         * @param {string} [createdAfter] Get Shipment Details that became available after this timestamp will be included in the result. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [createdBefore] Get Shipment Details that became available before this timestamp will be included in the result. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shipmentConfirmedBefore] Get Shipment Details by passing Shipment confirmed create Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shipmentConfirmedAfter] Get Shipment Details by passing Shipment confirmed create Date After. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [packageLabelCreatedBefore] Get Shipment Details by passing Package label create Date by buyer. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [packageLabelCreatedAfter] Get Shipment Details by passing Package label create Date After by buyer. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shippedBefore] Get Shipment Details by passing Shipped Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shippedAfter] Get Shipment Details by passing Shipped Date After. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [estimatedDeliveryBefore] Get Shipment Details by passing Estimated Delivery Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [estimatedDeliveryAfter] Get Shipment Details by passing Estimated Delivery Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shipmentDeliveryBefore] Get Shipment Details by passing Shipment Delivery Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [shipmentDeliveryAfter] Get Shipment Details by passing Shipment Delivery Date After. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [requestedPickUpBefore] Get Shipment Details by passing Before Requested pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [requestedPickUpAfter] Get Shipment Details by passing After Requested pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [scheduledPickUpBefore] Get Shipment Details by passing Before scheduled pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [scheduledPickUpAfter] Get Shipment Details by passing After Scheduled pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [currentShipmentStatus] Get Shipment Details by passing Current shipment status.
         * @param {string} [vendorShipmentIdentifier] Get Shipment Details by passing Vendor Shipment ID
         * @param {string} [buyerReferenceNumber] Get Shipment Details by passing buyer Reference ID
         * @param {string} [buyerWarehouseCode] Get Shipping Details based on buyer warehouse code. This value should be same as \&#39;shipToParty.partyId\&#39; in the Shipment.
         * @param {string} [sellerWarehouseCode] Get Shipping Details based on vendor warehouse code. This value should be same as \&#39;sellingParty.partyId\&#39; in the Shipment.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getShipmentDetails(limit?: number, sortOrder?: GetShipmentDetailsSortOrderEnum, nextToken?: string, createdAfter?: string, createdBefore?: string, shipmentConfirmedBefore?: string, shipmentConfirmedAfter?: string, packageLabelCreatedBefore?: string, packageLabelCreatedAfter?: string, shippedBefore?: string, shippedAfter?: string, estimatedDeliveryBefore?: string, estimatedDeliveryAfter?: string, shipmentDeliveryBefore?: string, shipmentDeliveryAfter?: string, requestedPickUpBefore?: string, requestedPickUpAfter?: string, scheduledPickUpBefore?: string, scheduledPickUpAfter?: string, currentShipmentStatus?: string, vendorShipmentIdentifier?: string, buyerReferenceNumber?: string, buyerWarehouseCode?: string, sellerWarehouseCode?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentDetailsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getShipmentDetails(limit, sortOrder, nextToken, createdAfter, createdBefore, shipmentConfirmedBefore, shipmentConfirmedAfter, packageLabelCreatedBefore, packageLabelCreatedAfter, shippedBefore, shippedAfter, estimatedDeliveryBefore, estimatedDeliveryAfter, shipmentDeliveryBefore, shipmentDeliveryAfter, requestedPickUpBefore, requestedPickUpAfter, scheduledPickUpBefore, scheduledPickUpAfter, currentShipmentStatus, vendorShipmentIdentifier, buyerReferenceNumber, buyerWarehouseCode, sellerWarehouseCode, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['VendorShipmentsApi.getShipmentDetails']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Returns small parcel shipment labels based on the filters that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {number} [limit] The limit to the number of records returned. Default value is 50 records.
         * @param {GetShipmentLabelsSortOrderEnum} [sortOrder] Sort the list by shipment label creation date in ascending or descending order.
         * @param {string} [nextToken] A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when the number of results exceeds the specified &#x60;pageSize&#x60; value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages.
         * @param {string} [labelCreatedAfter] Shipment labels created after this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
         * @param {string} [labelCreatedBefore] Shipment labels created before this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
         * @param {string} [buyerReferenceNumber] Get Shipment labels by passing buyer reference number.
         * @param {string} [vendorShipmentIdentifier] Get Shipment labels by passing vendor shipment identifier.
         * @param {string} [sellerWarehouseCode] Get Shipping labels based on vendor warehouse code. This value must be same as the &#x60;sellingParty.partyId&#x60; in the shipment.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getShipmentLabels(limit?: number, sortOrder?: GetShipmentLabelsSortOrderEnum, nextToken?: string, labelCreatedAfter?: string, labelCreatedBefore?: string, buyerReferenceNumber?: string, vendorShipmentIdentifier?: string, sellerWarehouseCode?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentLabels>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getShipmentLabels(limit, sortOrder, nextToken, labelCreatedAfter, labelCreatedBefore, buyerReferenceNumber, vendorShipmentIdentifier, sellerWarehouseCode, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['VendorShipmentsApi.getShipmentLabels']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Submits one or more shipment confirmations for vendor orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @summary SubmitShipmentConfirmations
         * @param {SubmitShipmentConfirmationsRequest} body A request to submit shipment confirmation.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async submitShipmentConfirmations(body: SubmitShipmentConfirmationsRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubmitShipmentConfirmationsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.submitShipmentConfirmations(body, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['VendorShipmentsApi.submitShipmentConfirmations']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Submits one or more shipment request for vendor Orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @summary SubmitShipments
         * @param {SubmitShipments} body A request to submit shipment request.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async submitShipments(body: SubmitShipments, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubmitShipmentConfirmationsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.submitShipments(body, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['VendorShipmentsApi.submitShipments']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * VendorShipmentsApi - factory interface
 * @export
 */
export const VendorShipmentsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = VendorShipmentsApiFp(configuration)
    return {
        /**
         * Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @summary GetShipmentDetails
         * @param {VendorShipmentsApiGetShipmentDetailsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentDetails(requestParameters: VendorShipmentsApiGetShipmentDetailsRequest = {}, options?: RawAxiosRequestConfig): AxiosPromise<GetShipmentDetailsResponse> {
            return localVarFp.getShipmentDetails(requestParameters.limit, requestParameters.sortOrder, requestParameters.nextToken, requestParameters.createdAfter, requestParameters.createdBefore, requestParameters.shipmentConfirmedBefore, requestParameters.shipmentConfirmedAfter, requestParameters.packageLabelCreatedBefore, requestParameters.packageLabelCreatedAfter, requestParameters.shippedBefore, requestParameters.shippedAfter, requestParameters.estimatedDeliveryBefore, requestParameters.estimatedDeliveryAfter, requestParameters.shipmentDeliveryBefore, requestParameters.shipmentDeliveryAfter, requestParameters.requestedPickUpBefore, requestParameters.requestedPickUpAfter, requestParameters.scheduledPickUpBefore, requestParameters.scheduledPickUpAfter, requestParameters.currentShipmentStatus, requestParameters.vendorShipmentIdentifier, requestParameters.buyerReferenceNumber, requestParameters.buyerWarehouseCode, requestParameters.sellerWarehouseCode, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns small parcel shipment labels based on the filters that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {VendorShipmentsApiGetShipmentLabelsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentLabels(requestParameters: VendorShipmentsApiGetShipmentLabelsRequest = {}, options?: RawAxiosRequestConfig): AxiosPromise<GetShipmentLabels> {
            return localVarFp.getShipmentLabels(requestParameters.limit, requestParameters.sortOrder, requestParameters.nextToken, requestParameters.labelCreatedAfter, requestParameters.labelCreatedBefore, requestParameters.buyerReferenceNumber, requestParameters.vendorShipmentIdentifier, requestParameters.sellerWarehouseCode, options).then((request) => request(axios, basePath));
        },
        /**
         * Submits one or more shipment confirmations for vendor orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @summary SubmitShipmentConfirmations
         * @param {VendorShipmentsApiSubmitShipmentConfirmationsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitShipmentConfirmations(requestParameters: VendorShipmentsApiSubmitShipmentConfirmationsRequest, options?: RawAxiosRequestConfig): AxiosPromise<SubmitShipmentConfirmationsResponse> {
            return localVarFp.submitShipmentConfirmations(requestParameters.body, options).then((request) => request(axios, basePath));
        },
        /**
         * Submits one or more shipment request for vendor Orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @summary SubmitShipments
         * @param {VendorShipmentsApiSubmitShipmentsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitShipments(requestParameters: VendorShipmentsApiSubmitShipmentsRequest, options?: RawAxiosRequestConfig): AxiosPromise<SubmitShipmentConfirmationsResponse> {
            return localVarFp.submitShipments(requestParameters.body, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getShipmentDetails operation in VendorShipmentsApi.
 * @export
 * @interface VendorShipmentsApiGetShipmentDetailsRequest
 */
export interface VendorShipmentsApiGetShipmentDetailsRequest {
    /**
     * The limit to the number of records returned. Default value is 50 records.
     * @type {number}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly limit?: number

    /**
     * Sort in ascending or descending order by purchase order creation date.
     * @type {'ASC' | 'DESC'}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly sortOrder?: GetShipmentDetailsSortOrderEnum

    /**
     * Used for pagination when there are more shipments than the specified result size limit.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly nextToken?: string

    /**
     * Get Shipment Details that became available after this timestamp will be included in the result. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly createdAfter?: string

    /**
     * Get Shipment Details that became available before this timestamp will be included in the result. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly createdBefore?: string

    /**
     * Get Shipment Details by passing Shipment confirmed create Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly shipmentConfirmedBefore?: string

    /**
     * Get Shipment Details by passing Shipment confirmed create Date After. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly shipmentConfirmedAfter?: string

    /**
     * Get Shipment Details by passing Package label create Date by buyer. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly packageLabelCreatedBefore?: string

    /**
     * Get Shipment Details by passing Package label create Date After by buyer. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly packageLabelCreatedAfter?: string

    /**
     * Get Shipment Details by passing Shipped Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly shippedBefore?: string

    /**
     * Get Shipment Details by passing Shipped Date After. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly shippedAfter?: string

    /**
     * Get Shipment Details by passing Estimated Delivery Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly estimatedDeliveryBefore?: string

    /**
     * Get Shipment Details by passing Estimated Delivery Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly estimatedDeliveryAfter?: string

    /**
     * Get Shipment Details by passing Shipment Delivery Date Before. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly shipmentDeliveryBefore?: string

    /**
     * Get Shipment Details by passing Shipment Delivery Date After. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly shipmentDeliveryAfter?: string

    /**
     * Get Shipment Details by passing Before Requested pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly requestedPickUpBefore?: string

    /**
     * Get Shipment Details by passing After Requested pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly requestedPickUpAfter?: string

    /**
     * Get Shipment Details by passing Before scheduled pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly scheduledPickUpBefore?: string

    /**
     * Get Shipment Details by passing After Scheduled pickup date. Must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly scheduledPickUpAfter?: string

    /**
     * Get Shipment Details by passing Current shipment status.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly currentShipmentStatus?: string

    /**
     * Get Shipment Details by passing Vendor Shipment ID
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly vendorShipmentIdentifier?: string

    /**
     * Get Shipment Details by passing buyer Reference ID
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly buyerReferenceNumber?: string

    /**
     * Get Shipping Details based on buyer warehouse code. This value should be same as \&#39;shipToParty.partyId\&#39; in the Shipment.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly buyerWarehouseCode?: string

    /**
     * Get Shipping Details based on vendor warehouse code. This value should be same as \&#39;sellingParty.partyId\&#39; in the Shipment.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentDetails
     */
    readonly sellerWarehouseCode?: string
}

/**
 * Request parameters for getShipmentLabels operation in VendorShipmentsApi.
 * @export
 * @interface VendorShipmentsApiGetShipmentLabelsRequest
 */
export interface VendorShipmentsApiGetShipmentLabelsRequest {
    /**
     * The limit to the number of records returned. Default value is 50 records.
     * @type {number}
     * @memberof VendorShipmentsApiGetShipmentLabels
     */
    readonly limit?: number

    /**
     * Sort the list by shipment label creation date in ascending or descending order.
     * @type {'ASC' | 'DESC'}
     * @memberof VendorShipmentsApiGetShipmentLabels
     */
    readonly sortOrder?: GetShipmentLabelsSortOrderEnum

    /**
     * A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when the number of results exceeds the specified &#x60;pageSize&#x60; value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentLabels
     */
    readonly nextToken?: string

    /**
     * Shipment labels created after this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentLabels
     */
    readonly labelCreatedAfter?: string

    /**
     * Shipment labels created before this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentLabels
     */
    readonly labelCreatedBefore?: string

    /**
     * Get Shipment labels by passing buyer reference number.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentLabels
     */
    readonly buyerReferenceNumber?: string

    /**
     * Get Shipment labels by passing vendor shipment identifier.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentLabels
     */
    readonly vendorShipmentIdentifier?: string

    /**
     * Get Shipping labels based on vendor warehouse code. This value must be same as the &#x60;sellingParty.partyId&#x60; in the shipment.
     * @type {string}
     * @memberof VendorShipmentsApiGetShipmentLabels
     */
    readonly sellerWarehouseCode?: string
}

/**
 * Request parameters for submitShipmentConfirmations operation in VendorShipmentsApi.
 * @export
 * @interface VendorShipmentsApiSubmitShipmentConfirmationsRequest
 */
export interface VendorShipmentsApiSubmitShipmentConfirmationsRequest {
    /**
     * A request to submit shipment confirmation.
     * @type {SubmitShipmentConfirmationsRequest}
     * @memberof VendorShipmentsApiSubmitShipmentConfirmations
     */
    readonly body: SubmitShipmentConfirmationsRequest
}

/**
 * Request parameters for submitShipments operation in VendorShipmentsApi.
 * @export
 * @interface VendorShipmentsApiSubmitShipmentsRequest
 */
export interface VendorShipmentsApiSubmitShipmentsRequest {
    /**
     * A request to submit shipment request.
     * @type {SubmitShipments}
     * @memberof VendorShipmentsApiSubmitShipments
     */
    readonly body: SubmitShipments
}

/**
 * VendorShipmentsApi - object-oriented interface
 * @export
 * @class VendorShipmentsApi
 * @extends {BaseAPI}
 */
export class VendorShipmentsApi extends BaseAPI {
    /**
     * Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @summary GetShipmentDetails
     * @param {VendorShipmentsApiGetShipmentDetailsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorShipmentsApi
     */
    public getShipmentDetails(requestParameters: VendorShipmentsApiGetShipmentDetailsRequest = {}, options?: RawAxiosRequestConfig) {
        return VendorShipmentsApiFp(this.configuration).getShipmentDetails(requestParameters.limit, requestParameters.sortOrder, requestParameters.nextToken, requestParameters.createdAfter, requestParameters.createdBefore, requestParameters.shipmentConfirmedBefore, requestParameters.shipmentConfirmedAfter, requestParameters.packageLabelCreatedBefore, requestParameters.packageLabelCreatedAfter, requestParameters.shippedBefore, requestParameters.shippedAfter, requestParameters.estimatedDeliveryBefore, requestParameters.estimatedDeliveryAfter, requestParameters.shipmentDeliveryBefore, requestParameters.shipmentDeliveryAfter, requestParameters.requestedPickUpBefore, requestParameters.requestedPickUpAfter, requestParameters.scheduledPickUpBefore, requestParameters.scheduledPickUpAfter, requestParameters.currentShipmentStatus, requestParameters.vendorShipmentIdentifier, requestParameters.buyerReferenceNumber, requestParameters.buyerWarehouseCode, requestParameters.sellerWarehouseCode, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns small parcel shipment labels based on the filters that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {VendorShipmentsApiGetShipmentLabelsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorShipmentsApi
     */
    public getShipmentLabels(requestParameters: VendorShipmentsApiGetShipmentLabelsRequest = {}, options?: RawAxiosRequestConfig) {
        return VendorShipmentsApiFp(this.configuration).getShipmentLabels(requestParameters.limit, requestParameters.sortOrder, requestParameters.nextToken, requestParameters.labelCreatedAfter, requestParameters.labelCreatedBefore, requestParameters.buyerReferenceNumber, requestParameters.vendorShipmentIdentifier, requestParameters.sellerWarehouseCode, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Submits one or more shipment confirmations for vendor orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @summary SubmitShipmentConfirmations
     * @param {VendorShipmentsApiSubmitShipmentConfirmationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorShipmentsApi
     */
    public submitShipmentConfirmations(requestParameters: VendorShipmentsApiSubmitShipmentConfirmationsRequest, options?: RawAxiosRequestConfig) {
        return VendorShipmentsApiFp(this.configuration).submitShipmentConfirmations(requestParameters.body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Submits one or more shipment request for vendor Orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @summary SubmitShipments
     * @param {VendorShipmentsApiSubmitShipmentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorShipmentsApi
     */
    public submitShipments(requestParameters: VendorShipmentsApiSubmitShipmentsRequest, options?: RawAxiosRequestConfig) {
        return VendorShipmentsApiFp(this.configuration).submitShipments(requestParameters.body, options).then((request) => request(this.axios, this.basePath));
    }
}

/**
 * @export
 */
export const GetShipmentDetailsSortOrderEnum = {
    Asc: 'ASC',
    Desc: 'DESC'
} as const;
export type GetShipmentDetailsSortOrderEnum = typeof GetShipmentDetailsSortOrderEnum[keyof typeof GetShipmentDetailsSortOrderEnum];
/**
 * @export
 */
export const GetShipmentLabelsSortOrderEnum = {
    Asc: 'ASC',
    Desc: 'DESC'
} as const;
export type GetShipmentLabelsSortOrderEnum = typeof GetShipmentLabelsSortOrderEnum[keyof typeof GetShipmentLabelsSortOrderEnum];
